---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(fn_def_pub_unsafe), try_parse_module,\n    \"pub unsafe fn foo21(x: bool, y: address,) -> bool{x}\")"

---
Node(
  kind: Module(
    body: [
      Function(Node(
        kind: Function(
          sig: Node(
            kind: FunctionSignature(
              pub_: Some(Span(
                start: 0,
                end: 3,
              )),
              unsafe_: Some(Span(
                start: 4,
                end: 10,
              )),
              name: Node(
                kind: "foo21",
                span: Span(
                  start: 14,
                  end: 19,
                ),
              ),
              generic_params: Node(
                kind: [],
                span: Span(
                  start: 14,
                  end: 19,
                ),
              ),
              args: [
                Node(
                  kind: Regular(RegularFunctionArg(
                    label: None,
                    name: Node(
                      kind: "x",
                      span: Span(
                        start: 20,
                        end: 21,
                      ),
                    ),
                    typ: Node(
                      kind: Base(
                        base: "bool",
                      ),
                      span: Span(
                        start: 23,
                        end: 27,
                      ),
                    ),
                  )),
                  span: Span(
                    start: 20,
                    end: 27,
                  ),
                ),
                Node(
                  kind: Regular(RegularFunctionArg(
                    label: None,
                    name: Node(
                      kind: "y",
                      span: Span(
                        start: 29,
                        end: 30,
                      ),
                    ),
                    typ: Node(
                      kind: Base(
                        base: "address",
                      ),
                      span: Span(
                        start: 32,
                        end: 39,
                      ),
                    ),
                  )),
                  span: Span(
                    start: 29,
                    end: 39,
                  ),
                ),
              ],
              return_type: Some(Node(
                kind: Base(
                  base: "bool",
                ),
                span: Span(
                  start: 45,
                  end: 49,
                ),
              )),
            ),
            span: Span(
              start: 0,
              end: 49,
            ),
          ),
          body: [
            Node(
              kind: Expr(
                value: Node(
                  kind: Name("x"),
                  span: Span(
                    start: 50,
                    end: 51,
                  ),
                ),
              ),
              span: Span(
                start: 50,
                end: 51,
              ),
            ),
          ],
        ),
        span: Span(
          start: 0,
          end: 52,
        ),
      )),
    ],
  ),
  span: Span(
    start: 0,
    end: 52,
  ),
)

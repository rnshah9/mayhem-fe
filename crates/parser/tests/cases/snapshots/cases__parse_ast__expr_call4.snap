---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(expr_call4), expressions::parse_expr,\n           \"bang.bing.foo<Bar, Baz>(26, 42)\")"

---
Node(
  kind: Call(
    func: Node(
      kind: Attribute(
        value: Node(
          kind: Attribute(
            value: Node(
              kind: Name("bang"),
              span: Span(
                start: 0,
                end: 4,
              ),
            ),
            attr: Node(
              kind: "bing",
              span: Span(
                start: 5,
                end: 9,
              ),
            ),
          ),
          span: Span(
            start: 0,
            end: 9,
          ),
        ),
        attr: Node(
          kind: "foo",
          span: Span(
            start: 10,
            end: 13,
          ),
        ),
      ),
      span: Span(
        start: 0,
        end: 13,
      ),
    ),
    generic_args: Some(Node(
      kind: [
        TypeDesc(Node(
          kind: Base(
            base: "Bar",
          ),
          span: Span(
            start: 14,
            end: 17,
          ),
        )),
        TypeDesc(Node(
          kind: Base(
            base: "Baz",
          ),
          span: Span(
            start: 19,
            end: 22,
          ),
        )),
      ],
      span: Span(
        start: 13,
        end: 23,
      ),
    )),
    args: Node(
      kind: [
        Node(
          kind: CallArg(
            label: None,
            value: Node(
              kind: Num("26"),
              span: Span(
                start: 24,
                end: 26,
              ),
            ),
          ),
          span: Span(
            start: 24,
            end: 26,
          ),
        ),
        Node(
          kind: CallArg(
            label: None,
            value: Node(
              kind: Num("42"),
              span: Span(
                start: 28,
                end: 30,
              ),
            ),
          ),
          span: Span(
            start: 28,
            end: 30,
          ),
        ),
      ],
      span: Span(
        start: 23,
        end: 31,
      ),
    ),
  ),
  span: Span(
    start: 0,
    end: 31,
  ),
)

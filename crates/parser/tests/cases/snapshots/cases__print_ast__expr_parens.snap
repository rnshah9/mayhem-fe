---
source: crates/parser/tests/cases/print_ast.rs
expression: "parse_and_print(\"printing/expr_parens.fe\", src)"

---
contract Foo {
    fn bar() -> i256 {
        let baz1: i256 = -(4 * (26 + 52))
        let baz2: bool = not ((true or false) and true)
        let baz3: bool = not (true or false) and true
        let baz4: bool = not true or false and true
        let baz5: bool = not true or not (false and (true or not (32 + 26) / 5 == 0)) and false
        let baz6: i256 = -(4 * (26 + 52))
        let bing: i256
        bing = (4 << 26) + 52 + self.does_not_exist
        bing = (4 << 26) * (52 / does_not_exist + 32)
        bing = -42 ** 52
        bing = (-42) ** 52
        let bong: bool = -call_my_func("hello") == -3 ** 41
        let bang: bool = 1 == 2 == (3 == 4)
        let biz: u256 = 3 * (4 / 5)
        let big: u256 = 3 * 4 / 5
        let test: u256 = 3 ** 4 ** 5
        let test2: u256 = (3 ** 4) ** 5
        return -4 * (26 + 52)
    }
}


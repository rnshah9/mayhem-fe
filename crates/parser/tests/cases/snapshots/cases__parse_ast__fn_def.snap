---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(fn_def), try_parse_module,\n    \"fn transfer(from sender: address, to recip: address, _ val: u64) -> bool {\\n false \\n}\")"

---
Node(
  kind: Module(
    body: [
      Function(Node(
        kind: Function(
          sig: Node(
            kind: FunctionSignature(
              pub_: None,
              unsafe_: None,
              name: Node(
                kind: "transfer",
                span: Span(
                  start: 3,
                  end: 11,
                ),
              ),
              generic_params: Node(
                kind: [],
                span: Span(
                  start: 3,
                  end: 11,
                ),
              ),
              args: [
                Node(
                  kind: Regular(RegularFunctionArg(
                    label: Some(Node(
                      kind: "from",
                      span: Span(
                        start: 12,
                        end: 16,
                      ),
                    )),
                    name: Node(
                      kind: "sender",
                      span: Span(
                        start: 17,
                        end: 23,
                      ),
                    ),
                    typ: Node(
                      kind: Base(
                        base: "address",
                      ),
                      span: Span(
                        start: 25,
                        end: 32,
                      ),
                    ),
                  )),
                  span: Span(
                    start: 17,
                    end: 32,
                  ),
                ),
                Node(
                  kind: Regular(RegularFunctionArg(
                    label: Some(Node(
                      kind: "to",
                      span: Span(
                        start: 34,
                        end: 36,
                      ),
                    )),
                    name: Node(
                      kind: "recip",
                      span: Span(
                        start: 37,
                        end: 42,
                      ),
                    ),
                    typ: Node(
                      kind: Base(
                        base: "address",
                      ),
                      span: Span(
                        start: 44,
                        end: 51,
                      ),
                    ),
                  )),
                  span: Span(
                    start: 37,
                    end: 51,
                  ),
                ),
                Node(
                  kind: Regular(RegularFunctionArg(
                    label: Some(Node(
                      kind: "_",
                      span: Span(
                        start: 53,
                        end: 54,
                      ),
                    )),
                    name: Node(
                      kind: "val",
                      span: Span(
                        start: 55,
                        end: 58,
                      ),
                    ),
                    typ: Node(
                      kind: Base(
                        base: "u64",
                      ),
                      span: Span(
                        start: 60,
                        end: 63,
                      ),
                    ),
                  )),
                  span: Span(
                    start: 55,
                    end: 63,
                  ),
                ),
              ],
              return_type: Some(Node(
                kind: Base(
                  base: "bool",
                ),
                span: Span(
                  start: 68,
                  end: 72,
                ),
              )),
            ),
            span: Span(
              start: 0,
              end: 72,
            ),
          ),
          body: [
            Node(
              kind: Expr(
                value: Node(
                  kind: Bool(false),
                  span: Span(
                    start: 76,
                    end: 81,
                  ),
                ),
              ),
              span: Span(
                start: 76,
                end: 81,
              ),
            ),
          ],
        ),
        span: Span(
          start: 0,
          end: 84,
        ),
      )),
    ],
  ),
  span: Span(
    start: 0,
    end: 84,
  ),
)

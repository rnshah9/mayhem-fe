---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
   ┌─ const_generics.fe:2:5
   │  
 2 │ ╭     pub fn bar() {
 3 │ │         # const generics with literal.
 4 │ │         let array_lit: Array<i32, 8> = [i32(0); 8]
 5 │ │         let array_lit2: Array<i32, { 8 }> = [i32(0); 8]
   · │
46 │ │         let array_with_const: Array<i32, { DOUBLE_ARRAY_LENGTH / TWO }> = [i32(0); 8]
47 │ │     }
   │ ╰─────^ self: None, params: [] -> ()

note: 
   ┌─ const_generics.fe:4:13
   │
 4 │         let array_lit: Array<i32, 8> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
 5 │         let array_lit2: Array<i32, { 8 }> = [i32(0); 8]
   │             ^^^^^^^^^^ Array<i32, 8>
   ·
 8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
   │             ^^^^^^^^^^^^^ Array<i32, 8>
   ·
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │             ^^^^^^^^^^^^^^^^ Array<i32, 8>
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │             ^^^^^^^^^^^^^^^^^ Array<i32, 8>
   ·
15 │         let array_add: Array<i32, { 5 + 3 }> = [i32(42); 8]
   │             ^^^^^^^^^ Array<i32, 8>
16 │         let array_sub: Array<i32, { 10 -  2 }> = [i32(26); 8]
   │             ^^^^^^^^^ Array<i32, 8>
17 │         let array_mul: Array<i32, { 2 * 4 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
18 │         let array_div: Array<i32, { 16 / 2 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
19 │         let array_mod: Array<i32, { 26 % 9 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
20 │         let array_pow: Array<i32, { 2 ** 3 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
21 │         let array_shl: Array<i32, { 0b0010 << 2 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
22 │         let array_shr: Array<i32, { 0b100000 >> 2 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
23 │         let array_bitor: Array<i32, { 0b1000 |  0b0000 }> = [i32(0); 8]
   │             ^^^^^^^^^^^ Array<i32, 8>
24 │         let array_xor: Array<i32, { 0b1111 ^ 0b0111 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
25 │         let array_bitand: Array<i32, { 0b1010 & 0b1101 }> = [i32(0); 8]
   │             ^^^^^^^^^^^^ Array<i32, 8>
   ·
28 │         let array_eq: Array<i32, { 8 if 10 == 10 else 0 }> = [i32(0); 8]
   │             ^^^^^^^^ Array<i32, 8>
29 │         let array_ne: Array<i32, { 8 if 10 != 0 else 0 }> = [i32(0); 8]
   │             ^^^^^^^^ Array<i32, 8>
30 │         let array_lt1: Array<i32, { 8 if 0 < 10 else 0 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
31 │         let array_lt2: Array<i32, { 0 if 10 < 10 else 8 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
32 │         let array_lte: Array<i32, { 8 if 0 <= 10 else 0 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
33 │         let array_lte2: Array<i32, { 8 if 10 <= 10 else 0 }> = [i32(0); 8]
   │             ^^^^^^^^^^ Array<i32, 8>
34 │         let array_gt: Array<i32, { 8 if 10 > 0 else 0 }> = [i32(0); 8]
   │             ^^^^^^^^ Array<i32, 8>
35 │         let array_gt2: Array<i32, { 1 if 10 > 10 else 8 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
36 │         let array_gte: Array<i32, { 1 if 0 >= 10 else 8 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
37 │         let array_gte2: Array<i32, { 8 if 10 >= 10 else 0 }> = [i32(0); 8]
   │             ^^^^^^^^^^ Array<i32, 8>
   ·
40 │         let array_not: Array<i32, { 8 if not false else 0 }> = [i32(0); 8]
   │             ^^^^^^^^^ Array<i32, 8>
   ·
43 │         const DOUBLE_ARRAY_LENGTH: u64 = 16
   │               ^^^^^^^^^^^^^^^^^^^ u64
44 │         const TWO: u64 = 2
   │               ^^^ u64
45 │ 
46 │         let array_with_const: Array<i32, { DOUBLE_ARRAY_LENGTH / TWO }> = [i32(0); 8]
   │             ^^^^^^^^^^^^^^^^ Array<i32, 8>

note: 
  ┌─ const_generics.fe:4:45
  │
4 │         let array_lit: Array<i32, 8> = [i32(0); 8]
  │                                             ^ i32: Value

note: 
  ┌─ const_generics.fe:4:41
  │
4 │         let array_lit: Array<i32, 8> = [i32(0); 8]
  │                                         ^^^^^^  ^ u256: Value
  │                                         │        
  │                                         i32: Value

note: 
  ┌─ const_generics.fe:4:40
  │
4 │         let array_lit: Array<i32, 8> = [i32(0); 8]
  │                                        ^^^^^^^^^^^ Array<i32, 8>: Memory
5 │         let array_lit2: Array<i32, { 8 }> = [i32(0); 8]
  │                                      ^           ^ i32: Value
  │                                      │            
  │                                      u256: Value

note: 
  ┌─ const_generics.fe:5:46
  │
5 │         let array_lit2: Array<i32, { 8 }> = [i32(0); 8]
  │                                              ^^^^^^  ^ u256: Value
  │                                              │        
  │                                              i32: Value

note: 
  ┌─ const_generics.fe:5:45
  │
5 │         let array_lit2: Array<i32, { 8 }> = [i32(0); 8]
  │                                             ^^^^^^^^^^^ Array<i32, 8>: Memory
  ·
8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
  │                                              ^^^^^ bool: Value

note: 
  ┌─ const_generics.fe:8:41
  │
8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
  │                                         ^               ^ u256: Value
  │                                         │                
  │                                         u256: Value

note: 
  ┌─ const_generics.fe:8:41
  │
8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
  │                                         ^^^^^^^^^^^^^^^^^           ^ i32: Value
  │                                         │                            
  │                                         u256: Value

note: 
  ┌─ const_generics.fe:8:65
  │
8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
  │                                                                 ^^^^^^         ^^^^^ bool: Value
  │                                                                 │               
  │                                                                 i32: Value

note: 
  ┌─ const_generics.fe:8:75
  │
8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
  │                                                                           ^               ^ u256: Value
  │                                                                           │                
  │                                                                           u256: Value

note: 
  ┌─ const_generics.fe:8:75
  │
8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
  │                                                                           ^^^^^^^^^^^^^^^^^ u256: Value

note: 
   ┌─ const_generics.fe:8:64
   │
 8 │         let array_ternary: Array<i32, { 3 if false else 8 }> = [i32(0); { 3 if false else 8 }]
   │                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Array<i32, 8>: Memory
   ·
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │                                                  ^^^^    ^^^^^ bool: Value
   │                                                  │        
   │                                                  bool: Value

note: 
   ┌─ const_generics.fe:11:44
   │
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │                                            ^    ^^^^^^^^^^^^^^^      ^ u256: Value
   │                                            │    │                     
   │                                            │    bool: Value
   │                                            u256: Value

note: 
   ┌─ const_generics.fe:11:44
   │
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                            │                                      
   │                                            u256: Value

note: 
   ┌─ const_generics.fe:11:78
   │
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │                                                                              ^^^^^^          ^^^^    ^^^^^ bool: Value
   │                                                                              │               │        
   │                                                                              │               bool: Value
   │                                                                              i32: Value

note: 
   ┌─ const_generics.fe:11:88
   │
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │                                                                                        ^    ^^^^^^^^^^^^^^^      ^ u256: Value
   │                                                                                        │    │                     
   │                                                                                        │    bool: Value
   │                                                                                        u256: Value

note: 
   ┌─ const_generics.fe:11:88
   │
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value

note: 
   ┌─ const_generics.fe:11:77
   │
11 │         let array_logical_or: Array<i32, { 8 if (true or false) else 0 }> = [i32(0); { 8 if (true or false) else 0 }]
   │                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Array<i32, 8>: Memory
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │                                                   ^^^^     ^^^^^ bool: Value
   │                                                   │         
   │                                                   bool: Value

note: 
   ┌─ const_generics.fe:12:45
   │
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │                                             ^    ^^^^^^^^^^^^^^^^      ^ u256: Value
   │                                             │    │                      
   │                                             │    bool: Value
   │                                             u256: Value

note: 
   ┌─ const_generics.fe:12:45
   │
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                             │                                       
   │                                             u256: Value

note: 
   ┌─ const_generics.fe:12:80
   │
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │                                                                                ^^^^^^          ^^^^     ^^^^^ bool: Value
   │                                                                                │               │         
   │                                                                                │               bool: Value
   │                                                                                i32: Value

note: 
   ┌─ const_generics.fe:12:90
   │
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │                                                                                          ^    ^^^^^^^^^^^^^^^^      ^ u256: Value
   │                                                                                          │    │                      
   │                                                                                          │    bool: Value
   │                                                                                          u256: Value

note: 
   ┌─ const_generics.fe:12:90
   │
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ u256: Value

note: 
   ┌─ const_generics.fe:12:79
   │
12 │         let array_logical_and: Array<i32, { 0 if (true and false) else 8 }> = [i32(0); { 0 if (true and false) else 8 }]
   │                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Array<i32, 8>: Memory
   ·
15 │         let array_add: Array<i32, { 5 + 3 }> = [i32(42); 8]
   │                                     ^   ^ u256: Value
   │                                     │    
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:15:37
   │
15 │         let array_add: Array<i32, { 5 + 3 }> = [i32(42); 8]
   │                                     ^^^^^           ^^ i32: Value
   │                                     │                
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:15:49
   │
15 │         let array_add: Array<i32, { 5 + 3 }> = [i32(42); 8]
   │                                                 ^^^^^^^  ^ u256: Value
   │                                                 │         
   │                                                 i32: Value

note: 
   ┌─ const_generics.fe:15:48
   │
15 │         let array_add: Array<i32, { 5 + 3 }> = [i32(42); 8]
   │                                                ^^^^^^^^^^^^ Array<i32, 8>: Memory
16 │         let array_sub: Array<i32, { 10 -  2 }> = [i32(26); 8]
   │                                     ^^    ^ u256: Value
   │                                     │      
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:16:37
   │
16 │         let array_sub: Array<i32, { 10 -  2 }> = [i32(26); 8]
   │                                     ^^^^^^^           ^^ i32: Value
   │                                     │                  
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:16:51
   │
16 │         let array_sub: Array<i32, { 10 -  2 }> = [i32(26); 8]
   │                                                   ^^^^^^^  ^ u256: Value
   │                                                   │         
   │                                                   i32: Value

note: 
   ┌─ const_generics.fe:16:50
   │
16 │         let array_sub: Array<i32, { 10 -  2 }> = [i32(26); 8]
   │                                                  ^^^^^^^^^^^^ Array<i32, 8>: Memory
17 │         let array_mul: Array<i32, { 2 * 4 }> = [i32(0); 8]
   │                                     ^   ^ u256: Value
   │                                     │    
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:17:37
   │
17 │         let array_mul: Array<i32, { 2 * 4 }> = [i32(0); 8]
   │                                     ^^^^^           ^ i32: Value
   │                                     │                
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:17:49
   │
17 │         let array_mul: Array<i32, { 2 * 4 }> = [i32(0); 8]
   │                                                 ^^^^^^  ^ u256: Value
   │                                                 │        
   │                                                 i32: Value

note: 
   ┌─ const_generics.fe:17:48
   │
17 │         let array_mul: Array<i32, { 2 * 4 }> = [i32(0); 8]
   │                                                ^^^^^^^^^^^ Array<i32, 8>: Memory
18 │         let array_div: Array<i32, { 16 / 2 }> = [i32(0); 8]
   │                                     ^^   ^ u256: Value
   │                                     │     
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:18:37
   │
18 │         let array_div: Array<i32, { 16 / 2 }> = [i32(0); 8]
   │                                     ^^^^^^           ^ i32: Value
   │                                     │                 
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:18:50
   │
18 │         let array_div: Array<i32, { 16 / 2 }> = [i32(0); 8]
   │                                                  ^^^^^^  ^ u256: Value
   │                                                  │        
   │                                                  i32: Value

note: 
   ┌─ const_generics.fe:18:49
   │
18 │         let array_div: Array<i32, { 16 / 2 }> = [i32(0); 8]
   │                                                 ^^^^^^^^^^^ Array<i32, 8>: Memory
19 │         let array_mod: Array<i32, { 26 % 9 }> = [i32(0); 8]
   │                                     ^^   ^ u256: Value
   │                                     │     
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:19:37
   │
19 │         let array_mod: Array<i32, { 26 % 9 }> = [i32(0); 8]
   │                                     ^^^^^^           ^ i32: Value
   │                                     │                 
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:19:50
   │
19 │         let array_mod: Array<i32, { 26 % 9 }> = [i32(0); 8]
   │                                                  ^^^^^^  ^ u256: Value
   │                                                  │        
   │                                                  i32: Value

note: 
   ┌─ const_generics.fe:19:49
   │
19 │         let array_mod: Array<i32, { 26 % 9 }> = [i32(0); 8]
   │                                                 ^^^^^^^^^^^ Array<i32, 8>: Memory
20 │         let array_pow: Array<i32, { 2 ** 3 }> = [i32(0); 8]
   │                                     ^    ^ u256: Value
   │                                     │     
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:20:37
   │
20 │         let array_pow: Array<i32, { 2 ** 3 }> = [i32(0); 8]
   │                                     ^^^^^^           ^ i32: Value
   │                                     │                 
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:20:50
   │
20 │         let array_pow: Array<i32, { 2 ** 3 }> = [i32(0); 8]
   │                                                  ^^^^^^  ^ u256: Value
   │                                                  │        
   │                                                  i32: Value

note: 
   ┌─ const_generics.fe:20:49
   │
20 │         let array_pow: Array<i32, { 2 ** 3 }> = [i32(0); 8]
   │                                                 ^^^^^^^^^^^ Array<i32, 8>: Memory
21 │         let array_shl: Array<i32, { 0b0010 << 2 }> = [i32(0); 8]
   │                                     ^^^^^^    ^ u256: Value
   │                                     │          
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:21:37
   │
21 │         let array_shl: Array<i32, { 0b0010 << 2 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^           ^ i32: Value
   │                                     │                      
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:21:55
   │
21 │         let array_shl: Array<i32, { 0b0010 << 2 }> = [i32(0); 8]
   │                                                       ^^^^^^  ^ u256: Value
   │                                                       │        
   │                                                       i32: Value

note: 
   ┌─ const_generics.fe:21:54
   │
21 │         let array_shl: Array<i32, { 0b0010 << 2 }> = [i32(0); 8]
   │                                                      ^^^^^^^^^^^ Array<i32, 8>: Memory
22 │         let array_shr: Array<i32, { 0b100000 >> 2 }> = [i32(0); 8]
   │                                     ^^^^^^^^    ^ u256: Value
   │                                     │            
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:22:37
   │
22 │         let array_shr: Array<i32, { 0b100000 >> 2 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                        
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:22:57
   │
22 │         let array_shr: Array<i32, { 0b100000 >> 2 }> = [i32(0); 8]
   │                                                         ^^^^^^  ^ u256: Value
   │                                                         │        
   │                                                         i32: Value

note: 
   ┌─ const_generics.fe:22:56
   │
22 │         let array_shr: Array<i32, { 0b100000 >> 2 }> = [i32(0); 8]
   │                                                        ^^^^^^^^^^^ Array<i32, 8>: Memory
23 │         let array_bitor: Array<i32, { 0b1000 |  0b0000 }> = [i32(0); 8]
   │                                       ^^^^^^    ^^^^^^ u256: Value
   │                                       │          
   │                                       u256: Value

note: 
   ┌─ const_generics.fe:23:39
   │
23 │         let array_bitor: Array<i32, { 0b1000 |  0b0000 }> = [i32(0); 8]
   │                                       ^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                       │                           
   │                                       u256: Value

note: 
   ┌─ const_generics.fe:23:62
   │
23 │         let array_bitor: Array<i32, { 0b1000 |  0b0000 }> = [i32(0); 8]
   │                                                              ^^^^^^  ^ u256: Value
   │                                                              │        
   │                                                              i32: Value

note: 
   ┌─ const_generics.fe:23:61
   │
23 │         let array_bitor: Array<i32, { 0b1000 |  0b0000 }> = [i32(0); 8]
   │                                                             ^^^^^^^^^^^ Array<i32, 8>: Memory
24 │         let array_xor: Array<i32, { 0b1111 ^ 0b0111 }> = [i32(0); 8]
   │                                     ^^^^^^   ^^^^^^ u256: Value
   │                                     │         
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:24:37
   │
24 │         let array_xor: Array<i32, { 0b1111 ^ 0b0111 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                          
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:24:59
   │
24 │         let array_xor: Array<i32, { 0b1111 ^ 0b0111 }> = [i32(0); 8]
   │                                                           ^^^^^^  ^ u256: Value
   │                                                           │        
   │                                                           i32: Value

note: 
   ┌─ const_generics.fe:24:58
   │
24 │         let array_xor: Array<i32, { 0b1111 ^ 0b0111 }> = [i32(0); 8]
   │                                                          ^^^^^^^^^^^ Array<i32, 8>: Memory
25 │         let array_bitand: Array<i32, { 0b1010 & 0b1101 }> = [i32(0); 8]
   │                                        ^^^^^^   ^^^^^^ u256: Value
   │                                        │         
   │                                        u256: Value

note: 
   ┌─ const_generics.fe:25:40
   │
25 │         let array_bitand: Array<i32, { 0b1010 & 0b1101 }> = [i32(0); 8]
   │                                        ^^^^^^^^^^^^^^^           ^ i32: Value
   │                                        │                          
   │                                        u256: Value

note: 
   ┌─ const_generics.fe:25:62
   │
25 │         let array_bitand: Array<i32, { 0b1010 & 0b1101 }> = [i32(0); 8]
   │                                                              ^^^^^^  ^ u256: Value
   │                                                              │        
   │                                                              i32: Value

note: 
   ┌─ const_generics.fe:25:61
   │
25 │         let array_bitand: Array<i32, { 0b1010 & 0b1101 }> = [i32(0); 8]
   │                                                             ^^^^^^^^^^^ Array<i32, 8>: Memory
   ·
28 │         let array_eq: Array<i32, { 8 if 10 == 10 else 0 }> = [i32(0); 8]
   │                                         ^^    ^^ u256: Value
   │                                         │      
   │                                         u256: Value

note: 
   ┌─ const_generics.fe:28:36
   │
28 │         let array_eq: Array<i32, { 8 if 10 == 10 else 0 }> = [i32(0); 8]
   │                                    ^    ^^^^^^^^      ^ u256: Value
   │                                    │    │              
   │                                    │    bool: Value
   │                                    u256: Value

note: 
   ┌─ const_generics.fe:28:36
   │
28 │         let array_eq: Array<i32, { 8 if 10 == 10 else 0 }> = [i32(0); 8]
   │                                    ^^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                    │                               
   │                                    u256: Value

note: 
   ┌─ const_generics.fe:28:63
   │
28 │         let array_eq: Array<i32, { 8 if 10 == 10 else 0 }> = [i32(0); 8]
   │                                                               ^^^^^^  ^ u256: Value
   │                                                               │        
   │                                                               i32: Value

note: 
   ┌─ const_generics.fe:28:62
   │
28 │         let array_eq: Array<i32, { 8 if 10 == 10 else 0 }> = [i32(0); 8]
   │                                                              ^^^^^^^^^^^ Array<i32, 8>: Memory
29 │         let array_ne: Array<i32, { 8 if 10 != 0 else 0 }> = [i32(0); 8]
   │                                         ^^    ^ u256: Value
   │                                         │      
   │                                         u256: Value

note: 
   ┌─ const_generics.fe:29:36
   │
29 │         let array_ne: Array<i32, { 8 if 10 != 0 else 0 }> = [i32(0); 8]
   │                                    ^    ^^^^^^^      ^ u256: Value
   │                                    │    │             
   │                                    │    bool: Value
   │                                    u256: Value

note: 
   ┌─ const_generics.fe:29:36
   │
29 │         let array_ne: Array<i32, { 8 if 10 != 0 else 0 }> = [i32(0); 8]
   │                                    ^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                    │                              
   │                                    u256: Value

note: 
   ┌─ const_generics.fe:29:62
   │
29 │         let array_ne: Array<i32, { 8 if 10 != 0 else 0 }> = [i32(0); 8]
   │                                                              ^^^^^^  ^ u256: Value
   │                                                              │        
   │                                                              i32: Value

note: 
   ┌─ const_generics.fe:29:61
   │
29 │         let array_ne: Array<i32, { 8 if 10 != 0 else 0 }> = [i32(0); 8]
   │                                                             ^^^^^^^^^^^ Array<i32, 8>: Memory
30 │         let array_lt1: Array<i32, { 8 if 0 < 10 else 0 }> = [i32(0); 8]
   │                                          ^   ^^ u256: Value
   │                                          │    
   │                                          u256: Value

note: 
   ┌─ const_generics.fe:30:37
   │
30 │         let array_lt1: Array<i32, { 8 if 0 < 10 else 0 }> = [i32(0); 8]
   │                                     ^    ^^^^^^      ^ u256: Value
   │                                     │    │            
   │                                     │    bool: Value
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:30:37
   │
30 │         let array_lt1: Array<i32, { 8 if 0 < 10 else 0 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                             
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:30:62
   │
30 │         let array_lt1: Array<i32, { 8 if 0 < 10 else 0 }> = [i32(0); 8]
   │                                                              ^^^^^^  ^ u256: Value
   │                                                              │        
   │                                                              i32: Value

note: 
   ┌─ const_generics.fe:30:61
   │
30 │         let array_lt1: Array<i32, { 8 if 0 < 10 else 0 }> = [i32(0); 8]
   │                                                             ^^^^^^^^^^^ Array<i32, 8>: Memory
31 │         let array_lt2: Array<i32, { 0 if 10 < 10 else 8 }> = [i32(0); 8]
   │                                          ^^   ^^ u256: Value
   │                                          │     
   │                                          u256: Value

note: 
   ┌─ const_generics.fe:31:37
   │
31 │         let array_lt2: Array<i32, { 0 if 10 < 10 else 8 }> = [i32(0); 8]
   │                                     ^    ^^^^^^^      ^ u256: Value
   │                                     │    │             
   │                                     │    bool: Value
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:31:37
   │
31 │         let array_lt2: Array<i32, { 0 if 10 < 10 else 8 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                              
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:31:63
   │
31 │         let array_lt2: Array<i32, { 0 if 10 < 10 else 8 }> = [i32(0); 8]
   │                                                               ^^^^^^  ^ u256: Value
   │                                                               │        
   │                                                               i32: Value

note: 
   ┌─ const_generics.fe:31:62
   │
31 │         let array_lt2: Array<i32, { 0 if 10 < 10 else 8 }> = [i32(0); 8]
   │                                                              ^^^^^^^^^^^ Array<i32, 8>: Memory
32 │         let array_lte: Array<i32, { 8 if 0 <= 10 else 0 }> = [i32(0); 8]
   │                                          ^    ^^ u256: Value
   │                                          │     
   │                                          u256: Value

note: 
   ┌─ const_generics.fe:32:37
   │
32 │         let array_lte: Array<i32, { 8 if 0 <= 10 else 0 }> = [i32(0); 8]
   │                                     ^    ^^^^^^^      ^ u256: Value
   │                                     │    │             
   │                                     │    bool: Value
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:32:37
   │
32 │         let array_lte: Array<i32, { 8 if 0 <= 10 else 0 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                              
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:32:63
   │
32 │         let array_lte: Array<i32, { 8 if 0 <= 10 else 0 }> = [i32(0); 8]
   │                                                               ^^^^^^  ^ u256: Value
   │                                                               │        
   │                                                               i32: Value

note: 
   ┌─ const_generics.fe:32:62
   │
32 │         let array_lte: Array<i32, { 8 if 0 <= 10 else 0 }> = [i32(0); 8]
   │                                                              ^^^^^^^^^^^ Array<i32, 8>: Memory
33 │         let array_lte2: Array<i32, { 8 if 10 <= 10 else 0 }> = [i32(0); 8]
   │                                           ^^    ^^ u256: Value
   │                                           │      
   │                                           u256: Value

note: 
   ┌─ const_generics.fe:33:38
   │
33 │         let array_lte2: Array<i32, { 8 if 10 <= 10 else 0 }> = [i32(0); 8]
   │                                      ^    ^^^^^^^^      ^ u256: Value
   │                                      │    │              
   │                                      │    bool: Value
   │                                      u256: Value

note: 
   ┌─ const_generics.fe:33:38
   │
33 │         let array_lte2: Array<i32, { 8 if 10 <= 10 else 0 }> = [i32(0); 8]
   │                                      ^^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                      │                               
   │                                      u256: Value

note: 
   ┌─ const_generics.fe:33:65
   │
33 │         let array_lte2: Array<i32, { 8 if 10 <= 10 else 0 }> = [i32(0); 8]
   │                                                                 ^^^^^^  ^ u256: Value
   │                                                                 │        
   │                                                                 i32: Value

note: 
   ┌─ const_generics.fe:33:64
   │
33 │         let array_lte2: Array<i32, { 8 if 10 <= 10 else 0 }> = [i32(0); 8]
   │                                                                ^^^^^^^^^^^ Array<i32, 8>: Memory
34 │         let array_gt: Array<i32, { 8 if 10 > 0 else 0 }> = [i32(0); 8]
   │                                         ^^   ^ u256: Value
   │                                         │     
   │                                         u256: Value

note: 
   ┌─ const_generics.fe:34:36
   │
34 │         let array_gt: Array<i32, { 8 if 10 > 0 else 0 }> = [i32(0); 8]
   │                                    ^    ^^^^^^      ^ u256: Value
   │                                    │    │            
   │                                    │    bool: Value
   │                                    u256: Value

note: 
   ┌─ const_generics.fe:34:36
   │
34 │         let array_gt: Array<i32, { 8 if 10 > 0 else 0 }> = [i32(0); 8]
   │                                    ^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                    │                             
   │                                    u256: Value

note: 
   ┌─ const_generics.fe:34:61
   │
34 │         let array_gt: Array<i32, { 8 if 10 > 0 else 0 }> = [i32(0); 8]
   │                                                             ^^^^^^  ^ u256: Value
   │                                                             │        
   │                                                             i32: Value

note: 
   ┌─ const_generics.fe:34:60
   │
34 │         let array_gt: Array<i32, { 8 if 10 > 0 else 0 }> = [i32(0); 8]
   │                                                            ^^^^^^^^^^^ Array<i32, 8>: Memory
35 │         let array_gt2: Array<i32, { 1 if 10 > 10 else 8 }> = [i32(0); 8]
   │                                          ^^   ^^ u256: Value
   │                                          │     
   │                                          u256: Value

note: 
   ┌─ const_generics.fe:35:37
   │
35 │         let array_gt2: Array<i32, { 1 if 10 > 10 else 8 }> = [i32(0); 8]
   │                                     ^    ^^^^^^^      ^ u256: Value
   │                                     │    │             
   │                                     │    bool: Value
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:35:37
   │
35 │         let array_gt2: Array<i32, { 1 if 10 > 10 else 8 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                              
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:35:63
   │
35 │         let array_gt2: Array<i32, { 1 if 10 > 10 else 8 }> = [i32(0); 8]
   │                                                               ^^^^^^  ^ u256: Value
   │                                                               │        
   │                                                               i32: Value

note: 
   ┌─ const_generics.fe:35:62
   │
35 │         let array_gt2: Array<i32, { 1 if 10 > 10 else 8 }> = [i32(0); 8]
   │                                                              ^^^^^^^^^^^ Array<i32, 8>: Memory
36 │         let array_gte: Array<i32, { 1 if 0 >= 10 else 8 }> = [i32(0); 8]
   │                                          ^    ^^ u256: Value
   │                                          │     
   │                                          u256: Value

note: 
   ┌─ const_generics.fe:36:37
   │
36 │         let array_gte: Array<i32, { 1 if 0 >= 10 else 8 }> = [i32(0); 8]
   │                                     ^    ^^^^^^^      ^ u256: Value
   │                                     │    │             
   │                                     │    bool: Value
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:36:37
   │
36 │         let array_gte: Array<i32, { 1 if 0 >= 10 else 8 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                              
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:36:63
   │
36 │         let array_gte: Array<i32, { 1 if 0 >= 10 else 8 }> = [i32(0); 8]
   │                                                               ^^^^^^  ^ u256: Value
   │                                                               │        
   │                                                               i32: Value

note: 
   ┌─ const_generics.fe:36:62
   │
36 │         let array_gte: Array<i32, { 1 if 0 >= 10 else 8 }> = [i32(0); 8]
   │                                                              ^^^^^^^^^^^ Array<i32, 8>: Memory
37 │         let array_gte2: Array<i32, { 8 if 10 >= 10 else 0 }> = [i32(0); 8]
   │                                           ^^    ^^ u256: Value
   │                                           │      
   │                                           u256: Value

note: 
   ┌─ const_generics.fe:37:38
   │
37 │         let array_gte2: Array<i32, { 8 if 10 >= 10 else 0 }> = [i32(0); 8]
   │                                      ^    ^^^^^^^^      ^ u256: Value
   │                                      │    │              
   │                                      │    bool: Value
   │                                      u256: Value

note: 
   ┌─ const_generics.fe:37:38
   │
37 │         let array_gte2: Array<i32, { 8 if 10 >= 10 else 0 }> = [i32(0); 8]
   │                                      ^^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                      │                               
   │                                      u256: Value

note: 
   ┌─ const_generics.fe:37:65
   │
37 │         let array_gte2: Array<i32, { 8 if 10 >= 10 else 0 }> = [i32(0); 8]
   │                                                                 ^^^^^^  ^ u256: Value
   │                                                                 │        
   │                                                                 i32: Value

note: 
   ┌─ const_generics.fe:37:64
   │
37 │         let array_gte2: Array<i32, { 8 if 10 >= 10 else 0 }> = [i32(0); 8]
   │                                                                ^^^^^^^^^^^ Array<i32, 8>: Memory
   ·
40 │         let array_not: Array<i32, { 8 if not false else 0 }> = [i32(0); 8]
   │                                              ^^^^^ bool: Value

note: 
   ┌─ const_generics.fe:40:37
   │
40 │         let array_not: Array<i32, { 8 if not false else 0 }> = [i32(0); 8]
   │                                     ^    ^^^^^^^^^      ^ u256: Value
   │                                     │    │               
   │                                     │    bool: Value
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:40:37
   │
40 │         let array_not: Array<i32, { 8 if not false else 0 }> = [i32(0); 8]
   │                                     ^^^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                     │                                
   │                                     u256: Value

note: 
   ┌─ const_generics.fe:40:65
   │
40 │         let array_not: Array<i32, { 8 if not false else 0 }> = [i32(0); 8]
   │                                                                 ^^^^^^  ^ u256: Value
   │                                                                 │        
   │                                                                 i32: Value

note: 
   ┌─ const_generics.fe:40:64
   │
40 │         let array_not: Array<i32, { 8 if not false else 0 }> = [i32(0); 8]
   │                                                                ^^^^^^^^^^^ Array<i32, 8>: Memory
   ·
43 │         const DOUBLE_ARRAY_LENGTH: u64 = 16
   │                                          ^^ u64: Value
44 │         const TWO: u64 = 2
   │                          ^ u64: Value
45 │ 
46 │         let array_with_const: Array<i32, { DOUBLE_ARRAY_LENGTH / TWO }> = [i32(0); 8]
   │                                            ^^^^^^^^^^^^^^^^^^^   ^^^ u64: Value
   │                                            │                      
   │                                            u64: Value

note: 
   ┌─ const_generics.fe:46:44
   │
46 │         let array_with_const: Array<i32, { DOUBLE_ARRAY_LENGTH / TWO }> = [i32(0); 8]
   │                                            ^^^^^^^^^^^^^^^^^^^^^^^^^           ^ i32: Value
   │                                            │                                    
   │                                            u64: Value

note: 
   ┌─ const_generics.fe:46:76
   │
46 │         let array_with_const: Array<i32, { DOUBLE_ARRAY_LENGTH / TWO }> = [i32(0); 8]
   │                                                                            ^^^^^^  ^ u256: Value
   │                                                                            │        
   │                                                                            i32: Value

note: 
   ┌─ const_generics.fe:46:75
   │
46 │         let array_with_const: Array<i32, { DOUBLE_ARRAY_LENGTH / TWO }> = [i32(0); 8]
   │                                                                           ^^^^^^^^^^^ Array<i32, 8>: Memory



---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
   ┌─ strings.fe:5:9
   │
 5 │         s2: String<26>
   │         ^^^^^^^^^^^^^^ String<26>
 6 │         u: u256
   │         ^^^^^^^ u256
 7 │         s1: String<42>
   │         ^^^^^^^^^^^^^^ String<42>
 8 │         s3: String<100>
   │         ^^^^^^^^^^^^^^^ String<100>
 9 │         a: address
   │         ^^^^^^^^^^ address
10 │         s4: String<18>
   │         ^^^^^^^^^^^^^^ String<18>
11 │         s5: String<100>
   │         ^^^^^^^^^^^^^^^ String<100>

note: 
   ┌─ strings.fe:18:5
   │  
18 │ ╭     pub fn bar(s1: String<100>, s2: String<100>) -> String<100> {
19 │ │         return s2
20 │ │     }
   │ ╰─────^ self: None, params: [{ label: None, name: s1, typ: String<100> }, { label: None, name: s2, typ: String<100> }] -> String<100>

note: 
   ┌─ strings.fe:19:16
   │
19 │         return s2
   │                ^^ String<100>: Memory

note: 
   ┌─ strings.fe:22:5
   │  
22 │ ╭     pub fn return_static_string() -> String<43> {
23 │ │         return "The quick brown fox jumps over the lazy dog"
24 │ │     }
   │ ╰─────^ self: None, params: [] -> String<43>

note: 
   ┌─ strings.fe:23:16
   │
23 │         return "The quick brown fox jumps over the lazy dog"
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ String<43>: Memory

note: 
   ┌─ strings.fe:26:5
   │  
26 │ ╭     pub fn return_casted_static_string() -> String<100> {
27 │ │         return String<100>("foo")
28 │ │     }
   │ ╰─────^ self: None, params: [] -> String<100>

note: 
   ┌─ strings.fe:27:28
   │
27 │         return String<100>("foo")
   │                            ^^^^^ String<3>: Memory

note: 
   ┌─ strings.fe:27:16
   │
27 │         return String<100>("foo")
   │                ^^^^^^^^^^^^^^^^^^ String<100>: Memory

note: 
   ┌─ strings.fe:30:5
   │  
30 │ ╭     pub fn shorter_string_assign() {
31 │ │         let s: String<18> = "fe"
32 │ │     }
   │ ╰─────^ self: None, params: [] -> ()

note: 
   ┌─ strings.fe:31:13
   │
31 │         let s: String<18> = "fe"
   │             ^ String<18>

note: 
   ┌─ strings.fe:31:29
   │
31 │         let s: String<18> = "fe"
   │                             ^^^^ String<18>: Memory

note: 
   ┌─ strings.fe:34:5
   │  
34 │ ╭     pub fn return_special_chars() -> String<18> {
35 │ │         return "\n\"'\r\t
36 │ │         foo\\"
37 │ │     }
   │ ╰─────^ self: None, params: [] -> String<18>

note: 
   ┌─ strings.fe:35:16
   │  
35 │           return "\n\"'\r\t
   │ ╭────────────────^
36 │ │         foo\\"
   │ ╰──────────────^ String<18>: Memory



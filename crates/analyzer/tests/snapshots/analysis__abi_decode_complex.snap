---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ abi_decode_complex.fe:2:5
  │  
2 │ ╭     pub fn decode_static_complex(s: StaticComplex) -> StaticComplex {
3 │ │         return s
4 │ │     }
  │ ╰─────^ self: None, params: [{ label: None, name: s, typ: StaticComplex }] -> StaticComplex

note: 
  ┌─ abi_decode_complex.fe:3:16
  │
3 │         return s
  │                ^ StaticComplex: Memory

note: 
  ┌─ abi_decode_complex.fe:6:5
  │  
6 │ ╭     pub fn decode_string_complex(s: StringComplex) -> StringComplex {
7 │ │         return s
8 │ │     }
  │ ╰─────^ self: None, params: [{ label: None, name: s, typ: StringComplex }] -> StringComplex

note: 
  ┌─ abi_decode_complex.fe:7:16
  │
7 │         return s
  │                ^ StringComplex: Memory

note: 
   ┌─ abi_decode_complex.fe:10:5
   │  
10 │ ╭     pub fn decode_bytes_complex(s: BytesComplex) -> BytesComplex {
11 │ │         return s
12 │ │     }
   │ ╰─────^ self: None, params: [{ label: None, name: s, typ: BytesComplex }] -> BytesComplex

note: 
   ┌─ abi_decode_complex.fe:11:16
   │
11 │         return s
   │                ^ BytesComplex: Memory

note: 
   ┌─ abi_decode_complex.fe:14:5
   │  
14 │ ╭     pub fn decode_nested_dynamic_complex(s: NestedDynamicComplex) -> NestedDynamicComplex {
15 │ │         return s
16 │ │     }
   │ ╰─────^ self: None, params: [{ label: None, name: s, typ: NestedDynamicComplex }] -> NestedDynamicComplex

note: 
   ┌─ abi_decode_complex.fe:15:16
   │
15 │         return s
   │                ^ NestedDynamicComplex: Memory

note: 
   ┌─ abi_decode_complex.fe:18:5
   │  
18 │ ╭     pub fn decode_static_complex_elem_array(arr: Array<StaticComplex, 3>) -> Array<StaticComplex, 3> {
19 │ │         return arr
20 │ │     }
   │ ╰─────^ self: None, params: [{ label: None, name: arr, typ: Array<StaticComplex, 3> }] -> Array<StaticComplex, 3>

note: 
   ┌─ abi_decode_complex.fe:19:16
   │
19 │         return arr
   │                ^^^ Array<StaticComplex, 3>: Memory

note: 
   ┌─ abi_decode_complex.fe:22:5
   │  
22 │ ╭     pub fn decode_dynamic_complex_elem_array(arr: Array<NestedDynamicComplex, 3>) -> Array<NestedDynamicComplex, 3> {
23 │ │         return arr
24 │ │     }
   │ ╰─────^ self: None, params: [{ label: None, name: arr, typ: Array<NestedDynamicComplex, 3> }] -> Array<NestedDynamicComplex, 3>

note: 
   ┌─ abi_decode_complex.fe:23:16
   │
23 │         return arr
   │                ^^^ Array<NestedDynamicComplex, 3>: Memory

note: 
   ┌─ abi_decode_complex.fe:28:5
   │
28 │     pub inner_x: i32
   │     ^^^^^^^^^^^^^^^^ i32
29 │     pub inner_y: i32
   │     ^^^^^^^^^^^^^^^^ i32

note: 
   ┌─ abi_decode_complex.fe:33:5
   │
33 │     pub inner: StaticInner
   │     ^^^^^^^^^^^^^^^^^^^^^^ StaticInner
34 │     pub outer_x: i256
   │     ^^^^^^^^^^^^^^^^^ i256

note: 
   ┌─ abi_decode_complex.fe:38:5
   │
38 │     pub string: String<8>
   │     ^^^^^^^^^^^^^^^^^^^^^ String<8>
39 │     pub outer_x: i32
   │     ^^^^^^^^^^^^^^^^ i32

note: 
   ┌─ abi_decode_complex.fe:43:5
   │
43 │     pub bytes: Array<u8, 8>
   │     ^^^^^^^^^^^^^^^^^^^^^^^ Array<u8, 8>
44 │     pub outer_x: i32
   │     ^^^^^^^^^^^^^^^^ i32

note: 
   ┌─ abi_decode_complex.fe:48:5
   │
48 │     pub bytes_complex: BytesComplex
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ BytesComplex
49 │     pub static_complex: StaticComplex
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ StaticComplex
50 │     pub string_complex: StringComplex
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ StringComplex



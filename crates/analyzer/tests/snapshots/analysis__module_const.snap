---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"

---
note: 
  ┌─ module_const.fe:1:1
  │
1 │ type MY_ARRAY = Array<bool, { C4 }>
  │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Array<bool, 42>

note: 
  ┌─ module_const.fe:3:1
  │
3 │ const C1: i32 = 1
  │ ^^^^^^^^^^^^^^^^^ i32

note: 
  ┌─ module_const.fe:4:1
  │
4 │ const C2: i32 = C1 * 3
  │ ^^^^^^^^^^^^^^^^^^^^^^ i32

note: 
  ┌─ module_const.fe:5:1
  │
5 │ const C3: i32 = C4 + 2
  │ ^^^^^^^^^^^^^^^^^^^^^^ i32

note: 
  ┌─ module_const.fe:6:1
  │
6 │ const C4: i32 = 42
  │ ^^^^^^^^^^^^^^^^^^ i32

note: 
   ┌─ module_const.fe:9:5
   │  
 9 │ ╭     fn bar() -> i32 {
10 │ │         const LOCAL_CONST: i32 = C3 * 2
11 │ │         let _arr1: Array<i32, { C2 }> = [i32(0); { C2 }]
12 │ │         let _arr2: Array<i32, { LOCAL_CONST }> = [i32(0); { LOCAL_CONST }]
13 │ │         let _my_array: MY_ARRAY = [true; { C4 }]
14 │ │         return C4
15 │ │     }
   │ ╰─────^ self: None, params: [] -> i32

note: 
   ┌─ module_const.fe:10:15
   │
10 │         const LOCAL_CONST: i32 = C3 * 2
   │               ^^^^^^^^^^^ i32
11 │         let _arr1: Array<i32, { C2 }> = [i32(0); { C2 }]
   │             ^^^^^ Array<i32, 3>
12 │         let _arr2: Array<i32, { LOCAL_CONST }> = [i32(0); { LOCAL_CONST }]
   │             ^^^^^ Array<i32, 88>
13 │         let _my_array: MY_ARRAY = [true; { C4 }]
   │             ^^^^^^^^^ Array<bool, 42>

note: 
   ┌─ module_const.fe:10:34
   │
10 │         const LOCAL_CONST: i32 = C3 * 2
   │                                  ^^   ^ i32: Value
   │                                  │     
   │                                  i32: Value

note: 
   ┌─ module_const.fe:10:34
   │
10 │         const LOCAL_CONST: i32 = C3 * 2
   │                                  ^^^^^^ i32: Value
11 │         let _arr1: Array<i32, { C2 }> = [i32(0); { C2 }]
   │                                 ^^           ^ i32: Value
   │                                 │             
   │                                 i32: Value

note: 
   ┌─ module_const.fe:11:42
   │
11 │         let _arr1: Array<i32, { C2 }> = [i32(0); { C2 }]
   │                                          ^^^^^^    ^^ i32: Value
   │                                          │          
   │                                          i32: Value

note: 
   ┌─ module_const.fe:11:41
   │
11 │         let _arr1: Array<i32, { C2 }> = [i32(0); { C2 }]
   │                                         ^^^^^^^^^^^^^^^^ Array<i32, 3>: Memory
12 │         let _arr2: Array<i32, { LOCAL_CONST }> = [i32(0); { LOCAL_CONST }]
   │                                 ^^^^^^^^^^^           ^ i32: Value
   │                                 │                      
   │                                 i32: Value

note: 
   ┌─ module_const.fe:12:51
   │
12 │         let _arr2: Array<i32, { LOCAL_CONST }> = [i32(0); { LOCAL_CONST }]
   │                                                   ^^^^^^    ^^^^^^^^^^^ i32: Value
   │                                                   │          
   │                                                   i32: Value

note: 
   ┌─ module_const.fe:12:50
   │
12 │         let _arr2: Array<i32, { LOCAL_CONST }> = [i32(0); { LOCAL_CONST }]
   │                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^ Array<i32, 88>: Memory
13 │         let _my_array: MY_ARRAY = [true; { C4 }]
   │                                    ^^^^    ^^ i32: Value
   │                                    │        
   │                                    bool: Value

note: 
   ┌─ module_const.fe:13:35
   │
13 │         let _my_array: MY_ARRAY = [true; { C4 }]
   │                                   ^^^^^^^^^^^^^^ Array<bool, 42>: Memory
14 │         return C4
   │                ^^ i32: Value



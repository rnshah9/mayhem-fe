contract Foo {
    pub fn bar() {
        return baz(1 if true else 0)
    }

    pub fn nested() {
        if true {
            let a: u256 = 10
            let b: u256 = 20
            let x: u256 = 10
            let y: u256 = 20
            return double_baz(a if true else b, x if true else y)
        }
    }

    pub fn nested_ternary() {
        let a: u256 = 10
        let b: u256 = 20
        let x: u256 = 10
        let y: u256 = 20
        return baz(a if true else x if true else y)
    }

    pub fn in_dec() {
        let a: u256 = 10
        let b: u256 = 20
        let x: u256 = 10
        let y: u256 = 20
        let z: (u256, u256) = (a if true else b, x if true else y)
    }

    pub fn baz(_ val: u256) {}

    pub fn double_baz(_ val1: u256, _ val2: u256) {}
}

use std::context::Context

contract Foo {
    event Nums {
        idx num1: u256
        num2: u256
    }

    event Bases {
        num: u256
        addr: address
    }

    event Mix {
        num1: u256
        idx addr: address
        num2: u256
        my_bytes: Array<u8, 100>
    }

    event Addresses {
        addrs: Array<address, 2>
    }

    pub fn emit_nums(ctx: Context) {
        emit Nums(ctx, num1: 26, num2: 42)
    }

    pub fn emit_bases(ctx: Context, addr: address) {
        emit Bases(ctx, num: 26, addr)
    }

    pub fn emit_mix(ctx: Context, addr: address, my_bytes: Array<u8, 100>) {
        emit Mix(ctx, num1: 26, addr, num2: 42, my_bytes)
    }

    pub fn emit_addresses(ctx: Context, addr1: address, addr2: address) {
        let addrs: Array<address, 2> = [address(0); 2]
        addrs[0] = addr1
        addrs[1] = addr2
        emit Addresses(ctx, addrs)
    }
}

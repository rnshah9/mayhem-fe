contract Foo {
    pub fn bar() -> i256 {
        let my_array: Array<Pair, 3> = [Pair::new(-1, 1), Pair::new(10, -10), Pair::new(-100, 100)]

        let sum: i256 = 0
        for pair in my_array {
            sum += pair.l1_norm()
        }

        return sum
    }
}

struct Pair {
    pub x: i256
    pub y: i256
    
    pub fn new(_ x: i256, _ y: i256) -> Pair {
        return Pair(x, y)
    }
    
    pub fn l1_norm(self) -> i256 {
        return abs(self.x) + abs(self.y)
    }
}

fn abs(_ val: i256) -> i256 {
    if val < 0 {
        return -val
    } else {
        return val
    }
}

contract Math {
    pub fn sqrt(val: u256) -> u256 {
        let z: u256
        if val > 3 {
            z = val
            let x: u256 = val / 2 + 1
            while x < z {
                z = x
                x = (val / x + x) / 2
            }
        } else if val != 0 {
            z = 1
        }
        return z
    }

    pub fn min(x: u256, y: u256) -> u256 {
        return x if x < y else y
    }
}

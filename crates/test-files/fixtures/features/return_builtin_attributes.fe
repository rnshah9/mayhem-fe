use std::context::Context

contract Foo {
    pub fn base_fee(ctx: Context) -> u256 {
        return ctx.base_fee()
    }

    pub fn coinbase(ctx: Context) -> address {
        return ctx.block_coinbase()
    }

    pub fn difficulty(ctx: Context) -> u256 {
        return ctx.block_difficulty()
    }

    pub fn number(ctx: Context) -> u256 {
        return ctx.block_number()
    }

    pub fn timestamp(ctx: Context) -> u256 {
        return ctx.block_timestamp()
    }

    pub fn chainid(ctx: Context) -> u256 {
        return ctx.chain_id()
    }

    pub fn sender(ctx: Context) -> address {
        return ctx.msg_sender()
    }

    pub fn value(ctx: Context) -> u256 {
        return ctx.msg_value()
    }

    pub fn origin(ctx: Context) -> address {
        return ctx.tx_origin()
    }

    pub fn gas_price(ctx: Context) -> u256 {
        return ctx.tx_gas_price()
    }
}

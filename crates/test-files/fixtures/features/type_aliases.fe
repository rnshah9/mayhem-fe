use std::context::Context

type Posts = Map<PostId, PostBody>

type Scoreboard = Map<PostId, Score>

type AuthorPosts = Map<Author, PostId>

type Author = address

type Score = u64

type PostId = u256

type PostBody = String<32>

contract Forum {
    posts: Posts
    authors: AuthorPosts
    scoreboard: Scoreboard

    pub fn post(self, ctx: Context, body: PostBody) {
        let id: PostId = 0
        self.posts[id] = body
        self.authors[ctx.msg_sender()]
        self.scoreboard[id] = 0
    }

    pub fn upvote(self, id: PostId) -> Score {
        let score: Score = self.scoreboard[id] + 1
        self.scoreboard[id] = score
        return score
    }

    pub fn get_post(self, id: PostId) -> PostBody {
        return self.posts[id].to_mem()
    }
}
